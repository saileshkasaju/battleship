{"version":3,"sources":["assets/board.jpeg","game.js","Board.js","App.js","reportWebVitals.js","index.js"],"names":["model","boardSize","ships","locations","hits","Board","useState","gameStatus","setGameStatus","guessInput","setGuessInput","guesses","setGuesses","shipsSunk","setShipsSunk","useEffect","alert","fire","guess","shipIndex","ship","index","indexOf","prev","newShips","isSunk","previous","length","style","position","width","height","margin","background","board","id","top","left","color","onSubmit","e","preventDefault","firstChar","charAt","row","column","isNaN","type","placeholder","value","onChange","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f275dd7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/board.2d571f97.jpeg\";","export const model = {\n  boardSize: 7,\n  // ships: [\n  //   { locations: [0, 0, 0], hits: ['', '', ''] },\n  //   { locations: [0, 0, 0], hits: ['', '', ''] },\n  //   { locations: [0, 0, 0], hits: ['', '', ''] },\n  // ],\n  ships: [\n    { locations: ['06', '16', '26'], hits: ['', '', ''] },\n    { locations: ['24', '34', '44'], hits: ['', '', ''] },\n    { locations: ['10', '11', '12'], hits: ['', '', ''] },\n  ],\n};\n","import React, { useState, useEffect } from 'react';\nimport board from './assets/board.jpeg';\nimport { model } from './game';\n\nconst isSunk = (hits) => {\n  for (let hit of hits) {\n    if (hit !== 'hit') {\n      return false;\n    }\n  }\n  return true;\n};\n\nfunction Board() {\n  const [gameStatus, setGameStatus] = useState(model);\n  const [guessInput, setGuessInput] = useState('');\n  const [guesses, setGuesses] = useState(0);\n  const [shipsSunk, setShipsSunk] = useState(0);\n  const numShips = 3;\n\n  useEffect(() => {\n    if (shipsSunk === numShips) {\n      alert(`You sank all my battleships, in ${guesses}  guesses`);\n    }\n  }, [shipsSunk, numShips, guesses]);\n  useEffect(() => {\n    if (shipsSunk) {\n      alert(`You sank my battleship`);\n    }\n  }, [shipsSunk]);\n  const fire = (guess) => {\n    for (let shipIndex = 0; shipIndex < gameStatus.ships.length; shipIndex++) {\n      const ship = { ...gameStatus.ships[shipIndex] };\n      let index = ship.locations.indexOf(guess);\n      if (ship.hits[index] === 'hit') {\n        alert('Oops, you already hit that location!');\n        return true;\n      } else if (index >= 0) {\n        setGameStatus((prev) => {\n          let newShips = [...prev.ships];\n          newShips[shipIndex].hits[index] = 'hit';\n          if (isSunk(newShips[shipIndex].hits)) {\n            setShipsSunk((previous) => ++previous);\n            return {\n              ...prev,\n              ships: newShips,\n            };\n          }\n          return {\n            ...prev,\n            ships: newShips,\n          };\n        });\n        // display Hit in guessed area\n        alert('HIT!');\n        return true;\n      }\n    }\n    alert('You missed.');\n    return false;\n  };\n\n  const handleGuess = (e) => {\n    setGuessInput(e.target.value);\n  };\n\n  const handleFire = (e) => {\n    e.preventDefault();\n    // validate Guess\n    const alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\n    if (!guessInput || guessInput.length !== 2) {\n      alert('Oops, please enter a letter and a number on the board.');\n    } else {\n      const firstChar = guessInput.charAt(0);\n      const row = alphabet.indexOf(firstChar);\n      const column = guessInput.charAt(1);\n      if (isNaN(row) || isNaN(column)) {\n        alert(\"Oops, that isn't on the board.\");\n      } else if (\n        row < 0 ||\n        row >= model.boardSize ||\n        column < 0 ||\n        column >= model.boardSize\n      ) {\n        alert(\"Oops, that's off the board!\");\n      } else {\n        // hit something in board check!!\n        setGuesses((prev) => ++prev);\n        fire(row + column);\n      }\n    }\n  };\n  return (\n    <div\n      style={{\n        position: 'relative',\n        width: '1024px',\n        height: '863px',\n        margin: 'auto',\n        background: `url('${board}') no-repeat`,\n      }}\n      id=\"board\"\n    >\n      <div\n        id=\"messageArea\"\n        style={{\n          position: 'absolute',\n          top: '0px',\n          left: '0px',\n          color: 'rgb(83, 175, 19)',\n        }}\n      ></div>\n      <table>\n        <tbody>\n          <tr>\n            <td id=\"00\"></td>\n            <td id=\"01\"></td>\n            <td id=\"02\"></td>\n            <td id=\"03\"></td>\n            <td id=\"04\"></td>\n            <td id=\"05\"></td>\n            <td id=\"06\"></td>\n          </tr>\n          <tr>\n            <td id=\"10\"></td>\n            <td id=\"11\"></td>\n            <td id=\"12\"></td>\n            <td id=\"13\"></td>\n            <td id=\"14\"></td>\n            <td id=\"15\"></td>\n            <td id=\"16\"></td>\n          </tr>\n          <tr>\n            <td id=\"20\"></td>\n            <td id=\"21\"></td>\n            <td id=\"22\"></td>\n            <td id=\"23\"></td>\n            <td id=\"24\"></td>\n            <td id=\"25\"></td>\n            <td id=\"26\"></td>\n          </tr>\n          <tr>\n            <td id=\"30\"></td>\n            <td id=\"31\"></td>\n            <td id=\"32\"></td>\n            <td id=\"33\"></td>\n            <td id=\"34\"></td>\n            <td id=\"35\"></td>\n            <td id=\"36\"></td>\n          </tr>\n          <tr>\n            <td id=\"40\"></td>\n            <td id=\"41\"></td>\n            <td id=\"42\"></td>\n            <td id=\"43\"></td>\n            <td id=\"44\"></td>\n            <td id=\"45\"></td>\n            <td id=\"46\"></td>\n          </tr>\n          <tr>\n            <td id=\"50\"></td>\n            <td id=\"51\"></td>\n            <td id=\"52\"></td>\n            <td id=\"53\"></td>\n            <td id=\"54\"></td>\n            <td id=\"55\"></td>\n            <td id=\"56\"></td>\n          </tr>\n          <tr>\n            <td id=\"60\"></td>\n            <td id=\"61\"></td>\n            <td id=\"62\"></td>\n            <td id=\"63\"></td>\n            <td id=\"64\"></td>\n            <td id=\"65\"></td>\n            <td id=\"66\"></td>\n          </tr>\n        </tbody>\n      </table>\n      <form onSubmit={handleFire}>\n        <input\n          type=\"text\"\n          id=\"guessInput\"\n          placeholder=\"A0\"\n          value={guessInput}\n          onChange={handleGuess}\n        />\n        <input type=\"submit\" id=\"fireButton\" value=\"Fire!\" />\n      </form>\n    </div>\n  );\n}\n\nexport default Board;\n","import Board from './Board';\n\nfunction App() {\n  return (\n    <div>\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}